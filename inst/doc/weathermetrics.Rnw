\documentclass{article}
%\VignetteIndexEntry{weathermetrics}
\usepackage[colorlinks = true, urlcolor = blue]{hyperref}
\begin{document}
\begin{center}
\Large
{\tt weathermetrics} Package Vignette
\normalsize
\end{center}

\section{Package contents}

<<echo = FALSE>>=
library(weathermetrics)
@ 

The \texttt{weathermetrics} package provides the following functions to calculate or convert between several weather metrics:

\begin{itemize}
\item \textbf{\texttt{celsius.to.fahrenheit:}} Convert a vector of
  temperatures in degrees Celsius to degrees Fahrenheit
\item \textbf{\texttt{fahrenheit.to.celsius:}} Convert a vector of
  temperatures in degrees Fahrenheit to degrees Celsius
\item  \textbf{\texttt{dewpoint.to.humidity:}} Calculate a vector of
  relative humidity values from vectors of air
  temperature and dew point temperature
\item  \textbf{\texttt{humidity.to.dewpoint:}} Calculate a vector of
  dew point temperatures from vectors of air
  temperature and relative humidity 
\textbf{\texttt{heat.index:}} Calculate a vector of heat index values
from vectors of air temperature and either dew point temperature or relative humidity
\end{itemize}

All algorithms are adapted for R from the algorithms used by \href{http://www.hpc.ncep.noaa.gov/html/heatindex.shtml}{the
United States National Weather Service online heat index
calculator} (accessed August 6, 2012). 

\section{Converting or calculating weather metrics}

\subsection*{Converting between Celsius and Fahrenheit}

This package includes two functions to convert between Celsius and
Fahrenheit, \texttt{celsius.to.fahrenheit} and
\texttt{fahrenheit.to.celsius}. As an example of how to use these functions, the
\texttt{lyon} dataset that comes with this package gives air
temperature (\texttt{lyon\$TemperatureC}) and dew point temperature
(\texttt{lyon\$DewpointC}), both in degrees Celsius, for Lyon,
France, for the week of June 18, 2000. 
To convert to degrees Fahrenheit, use the
\texttt{celsius.to.fahrenheit} function:

<<echo = TRUE>>=
data(lyon)
lyon$T_F <- celsius.to.fahrenheit(lyon$TemperatureC)
lyon$DP_F <- celsius.to.fahrenheit(lyon$DewpointC)
lyon
@ 

As a second example, the \texttt{norfolk} dataset includes temperature (\texttt{norfolk\$TemperatureF})
and dew point temperature (\texttt{norfolk\$TemperatureF}) in degrees Fahrenheit in Norfolk, VA, for the week of
March 12, 2006.
To calculate temperature and dew point temperature in degrees Celsius, use:

<<echo = TRUE>>=
data(norfolk)
norfolk$T_C <- fahrenheit.to.celsius(norfolk$TemperatureF)
norfolk$DP_C <- fahrenheit.to.celsius(norfolk$DewpointF)
norfolk
@ 

\subsection*{Calculating relative humidity and dew point temperature}

The \texttt{weathermetrics} package includes two functions for converting between air
temperature, dew point temperature, and relative humidity:
\texttt{dewpoint.to.humidity} and \texttt{humidity.to.dewpoint}. 
For
example, the \texttt{lyon} dataset includes daily values of both air
temperature (\texttt{lyon\$TemperatureC}) and dew point temperature (\texttt{lyon\$DewpointC}) in Lyon, France, for the week of
June 18, 2000. 
Since this dataset includes both air temperature and
dew point temperature, you can calculate relative humidity using:

<<echo = TRUE>>=
data(lyon)
lyon$RH <- dewpoint.to.humidity(t = lyon$TemperatureC,
                                dp = lyon$DewpointC,
                                temperature.metric = "celsius")
lyon
@ 

You can specify whether air temperature and dew point temperature
inputs are in degrees Fahrenheit or Celsius using the
\texttt{temperature.metric} option (possible values are
\texttt{"fahrenheit"} and \texttt{"celsius"}). If input values for
temperature and dew point temperature are in different metrics (i.e.,
one is in degrees Fahrenheit and the other in degrees Celsius), you must convert one of
the inputs using either \texttt{celsius.to.fahrenheit} or
\texttt{fahrenheit.to.celsius} before you can input the values to the
\texttt{dewpoint.to.humidity} function.

As an example of calculating dew point temperature, the
\texttt{newhaven} dataset gives daily values of air temperature in
degrees Fahrenheit (\texttt{newhaven\$TemperatureF}) and
relative humidity in \% (\texttt{newhaven\$Relative.Humidity}) for New Haven, CT, for the week of October
19, 2008.
Since this dataset includes values for both temperature and relative
humidity, you can calculate dew point temperature using:

<<echo = TRUE>>=
data(newhaven)
newhaven$DP <- humidity.to.dewpoint(t = newhaven$TemperatureF,
                                    rh = newhaven$Relative.Humidity,
                                    temperature.metric = "fahrenheit")
newhaven
@ 

Relative humidity must be input as \%, and you must specify the metric of air temperature using the
\texttt{temperature.metric} option (possible values:
\texttt{"fahrenheit"} or \texttt{"celsius"}). The dew point
temperature will be calculated using the same metric as the air
temperature input to the function. If you wish to get dew point
temperature in a different metric than air temperature, you can use on
of the functions that converts between Celsius and Fahrenheit. For example:

<<echo = TRUE>>=
data(newhaven)
newhaven$DP <- humidity.to.dewpoint(t = newhaven$TemperatureF,
                                    rh = newhaven$Relative.Humidity,
                                    temperature.metric = "fahrenheit")
newhaven$DP_C <- fahrenheit.to.celsius(newhaven$DP)
newhaven
@ 

Calculations between air temperature, relative humidity, and dew point
temperature are based on algorithms used by \href{http://www.hpc.ncep.noaa.gov/html/heatindex.shtml}{the
United States National Weather Service online heat index
calculator} (accessed August 6, 2012). These are approximations
rather than exact conversions.

\subsection*{Calculating heat index}

The \texttt{weathermetrics} package includes a function, \texttt{heat.index}, that allows you
to calculate a vector of heat index values from vectors of air temperature and
either dew point temperature or relative humidity. For example, the
\texttt{suffolk} dataset gives daily values of air temperature in
degrees Fahrenheit (\texttt{suffolk\$TemperatureF}) and relative humidity in \% (\texttt{suffolk\$Relative.Humidity}) for Suffolk, VA, for the week
of July 12, 1998.
To calculate daily heat index values for this dataset, use:

<<echo = TRUE>>=
data(suffolk)
suffolk$HI <- heat.index(t = suffolk$TemperatureF,
                         rh = suffolk$Relative.Humidity,
                         temperature.metric = "fahrenheit",
                         output.metric = "fahrenheit")
suffolk
@ 

You must specify whether the air temperature input to the function is
in degrees Celsius or Fahrenheit using the \texttt{temperature.metric} option (possible
values: \texttt{"fahrenheit"} or \texttt{"celsius"}). You can choose
which metric for heat index to be calculated in using 
using the \texttt{output.metric} option (the default is to give heat
index in the same metric as the air temperature values input to the function).

As another example, the \texttt{lyon} dataset gives daily values of
air temperature (\texttt{lyon\$TemperatureC}) and dew point
temperature (\texttt{lyon\$DewpointC}), both in degrees Celsius, for Lyon,
France, for the week of June 18, 2000.
You can use this data to calculate daily heat index values in degrees Fahrenheit using:

<<echo = TRUE>>=
data(lyon)
lyon$HI_F <- heat.index(t = lyon$TemperatureC,
                      dp = lyon$DewpointC,
                      temperature.metric = "celsius",
                      output.metric = "fahrenheit")
lyon
@ 

When calculating heat index from air temperature and dew point
temperature, both must be in the same metric (either degrees Fahrenheit or
degrees Celsius) when they are input to the \texttt{heat.index}
function. If this is not the case, you can use either
\texttt{celsius.to.fahrenheit} or \texttt{fahrenheit.to.celsius} to
convert one of the metrics before using \texttt{heat.index}.

The algorithm for the \texttt{heat.index} function is adapted for R
from the algorithms used by \href{http://www.hpc.ncep.noaa.gov/html/heatindex.shtml}{the
United States National Weather Service online heat index
calculator} (accessed August 6, 2012). Therefore, results will agree
with results from the US National Weather Service online calculator. However, heat index is
sometimes calculated using a simpler algorithm. Therefore, heat index
values from the \texttt{heat.index} function will sometimes differ by
one or two degrees compared to other heat index calculators or charts.

\section{Handling missing or impossible weather values}

When any of the functions in this package encounter a missing value (\texttt{NA}) within any of the input vectors, the output weather metric for that observation will also be set as \texttt{NA}. For example:

<<echo = TRUE>>=
df <- data.frame(T = c(NA, 90, 85),
                 DP = c(80, NA, 70))
df$RH <- dewpoint.to.humidity(t = df$T, dp = df$DP,
                              temperature.metric = "fahrenheit")
df
@ 

Certain values of dew point temperature or relative humidity are impossible. Relative humidity cannot be lower than 0\% or higher than
100\%. Dew point temperature cannot be higher than air
temperature (except in the case of supersaturation) . When any of these functions encounter an impossible
weather metric in an input vector, it returns \texttt{NA} as the
output weather metric for that observation. For example:

<<echo = TRUE>>=
df <- data.frame(T = c(90, 90, 85),
                 DP = c(80, 95, 70))
df$heat.index <- heat.index(t = df$T, dp = df$DP,
                            temperature.metric = 'fahrenheit')
df
@ 

Additionally, the function
returns a warning to alert the user that the input data includes
impossible values for some observations. 

\section{Rounding output values}

All functions have defaults for rounding that are consistent with the
algorithms used by \href{http://www.hpc.ncep.noaa.gov/html/heatindex.shtml}{the
United States National Weather Service online heat index
calculator} (accessed August 6, 2012). For several of the functions, you may also specify that outputs are rounded to a different
number of digits using the \texttt{round} option. For example:

<<echo = TRUE>>=
data(suffolk)
suffolk$TempC <- fahrenheit.to.celsius(suffolk$TemperatureF,
                                       round = 5)
suffolk$HI <- heat.index(t = suffolk$TemperatureF, 
                         rh = suffolk$Relative.Humidity,
                         round = 3)
suffolk
@ 

\end{document}
